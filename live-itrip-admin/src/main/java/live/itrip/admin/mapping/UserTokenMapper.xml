<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="live.itrip.admin.dao.UserTokenMapper">
    <resultMap id="BaseResultMap" type="live.itrip.admin.model.UserToken">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="auth_token" property="authToken" jdbcType="CHAR"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="user_email" property="userEmail" jdbcType="VARCHAR"/>
        <result column="api_key" property="apiKey" jdbcType="CHAR"/>
        <result column="source" property="source" jdbcType="VARCHAR"/>
        <result column="domain" property="domain" jdbcType="VARCHAR"/>
        <result column="client_version" property="clientVersion" jdbcType="VARCHAR"/>
        <result column="expire_time" property="expireTime" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="BIGINT"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, auth_token, user_id, user_email, api_key, source, domain, client_version, expire_time, 
    create_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from user_token
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_token
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="live.itrip.admin.model.UserToken" useGeneratedKeys="true" keyProperty="id">
    insert into user_token (id, auth_token, user_id, 
      user_email, api_key, source, 
      domain, client_version, expire_time, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{authToken,jdbcType=CHAR}, #{userId,jdbcType=BIGINT}, 
      #{userEmail,jdbcType=VARCHAR}, #{apiKey,jdbcType=CHAR}, #{source,jdbcType=VARCHAR}, 
      #{domain,jdbcType=VARCHAR}, #{clientVersion,jdbcType=VARCHAR}, #{expireTime,jdbcType=BIGINT}, 
      #{createTime,jdbcType=BIGINT})
  </insert>
    <insert id="insertSelective" parameterType="live.itrip.admin.model.UserToken" useGeneratedKeys="true"
            keyProperty="id">
        insert into user_token
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="authToken != null">
                auth_token,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="userEmail != null">
                user_email,
            </if>
            <if test="apiKey != null">
                api_key,
            </if>
            <if test="source != null">
                source,
            </if>
            <if test="domain != null">
                domain,
            </if>
            <if test="clientVersion != null">
                client_version,
            </if>
            <if test="expireTime != null">
                expire_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="authToken != null">
                #{authToken,jdbcType=CHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="userEmail != null">
                #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="apiKey != null">
                #{apiKey,jdbcType=CHAR},
            </if>
            <if test="source != null">
                #{source,jdbcType=VARCHAR},
            </if>
            <if test="domain != null">
                #{domain,jdbcType=VARCHAR},
            </if>
            <if test="clientVersion != null">
                #{clientVersion,jdbcType=VARCHAR},
            </if>
            <if test="expireTime != null">
                #{expireTime,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="live.itrip.admin.model.UserToken">
        update user_token
        <set>
            <if test="authToken != null">
                auth_token = #{authToken,jdbcType=CHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="userEmail != null">
                user_email = #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="apiKey != null">
                api_key = #{apiKey,jdbcType=CHAR},
            </if>
            <if test="source != null">
                source = #{source,jdbcType=VARCHAR},
            </if>
            <if test="domain != null">
                domain = #{domain,jdbcType=VARCHAR},
            </if>
            <if test="clientVersion != null">
                client_version = #{clientVersion,jdbcType=VARCHAR},
            </if>
            <if test="expireTime != null">
                expire_time = #{expireTime,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="live.itrip.admin.model.UserToken">
    update user_token
    set auth_token = #{authToken,jdbcType=CHAR},
      user_id = #{userId,jdbcType=BIGINT},
      user_email = #{userEmail,jdbcType=VARCHAR},
      api_key = #{apiKey,jdbcType=CHAR},
      source = #{source,jdbcType=VARCHAR},
      domain = #{domain,jdbcType=VARCHAR},
      client_version = #{clientVersion,jdbcType=VARCHAR},
      expire_time = #{expireTime,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
    </update>


    <!--自定义查询-->
    <select id="selectByToken" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from user_token
        where auth_token = '${token}'
    </select>
</mapper>